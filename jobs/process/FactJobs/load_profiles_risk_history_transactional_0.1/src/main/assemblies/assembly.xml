<?xml version="1.0" encoding="UTF-8"?>
<assembly
	xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2 http://maven.apache.org/xsd/assembly-1.1.2.xsd">
	<id>bin</id>
	<includeBaseDirectory>false</includeBaseDirectory>
	<formats>
		<format>zip</format>
	</formats>

	<files>
		<file> <!-- jobInfo.properties -->
			<source>${basedir}/src/main/templates/jobInfo_template.properties
			</source>
			<outputDirectory>.</outputDirectory>
			<destName>jobInfo.properties</destName>
			<filtered>true</filtered>
		</file>
		<file> <!-- sh -->
			<source>${basedir}/src/main/templates/Job_run_template.sh</source>
			<outputDirectory>${talend.job.name}</outputDirectory>
			<destName>${talend.job.name}_run.sh</destName>
			<filtered>true</filtered>
		</file>
		<file> <!-- bat -->
			<source>${basedir}/src/main/templates/Job_run_template.bat</source>
			<outputDirectory>${talend.job.name}</outputDirectory>
			<destName>${talend.job.name}_run.bat</destName>
			<filtered>true</filtered>
		</file>
		<file> <!-- ps1 -->
			<source>${basedir}/src/main/templates/Job_run_template.ps1</source>
			<outputDirectory>${talend.job.name}</outputDirectory>
			<destName>${talend.job.name}_run.ps1</destName>
			<filtered>true</filtered>
		</file>
	</files>

	<fileSets>
		<fileSet><!-- templates -->
			<directory>${templates.dir}</directory>
			<outputDirectory>${talend.job.name}/src/main/templates/
			</outputDirectory>
			<includes>
				<include>**</include>
			</includes>
		</fileSet>
		<fileSet><!-- log4j resources -->
			<directory>${log4j.resources.dir}</directory>
			<outputDirectory>${output.resources.dir}/
			</outputDirectory>
			<includes>
				<include>log4j.xml</include>
			</includes>
		</fileSet>
		<fileSet><!-- log4j.xml for running -->
			<directory>${log4j.running.dir}</directory>
			<outputDirectory>${talend.job.name}</outputDirectory>
			<includes>
				<include>log4j.xml</include>
			</includes>
		</fileSet>
		<fileSet><!-- xmlMappings resources -->
			<directory>${xmlMappings.resources.dir}</directory>
			<outputDirectory>${output.resources.dir}/xmlMappings/
			</outputDirectory>
			<includes>
				<include>**/*.*</include>
			</includes>
		</fileSet>
		<fileSet><!-- xmlMappings for running -->
			<directory>${xmlMappings.running.dir}</directory>
			<outputDirectory>${talend.job.name}/xmlMappings/
			</outputDirectory>
			<includes>
				<include>**/*.*</include>
			</includes>
		</fileSet>
		<fileSet><!-- rules resources -->
			<directory>${rules.resources.dir}</directory>
			<outputDirectory>${output.resources.dir}/rules/
			</outputDirectory>
			<includes>
				<include>**/*.*</include>
			</includes>
		</fileSet>
		<fileSet><!-- assembly_*.xml -->
			<directory>${assemblies.dir}</directory>
			<outputDirectory>${talend.job.name}/src/main/assemblies/
			</outputDirectory>
			<includes>
				<include>assembly.xml</include>
			</includes>
		</fileSet>
		<fileSet><!-- pom_*.xml -->
			<directory>${poms.dir}</directory>
			<outputDirectory>${talend.job.name}</outputDirectory>
			<includes>
				<include>pom.xml</include>
			</includes>
		</fileSet>
		<fileSet> <!-- add items -->
			<directory>${items.dir}</directory>
			<outputDirectory>${talend.job.name}</outputDirectory>
			<includes>
				<include>**</include>
			</includes>
		</fileSet>
		<fileSet> <!-- add java source codes -->
			<directory>${sourcecodes.dir}</directory>
			<outputDirectory>${talend.job.name}/src/main/java/</outputDirectory>
			<includes>
				<include>${talend.job.path}/**</include>
			</includes>
		</fileSet>
		<fileSet><!-- add context resources -->
			<directory>${resources.dir}</directory>
			<outputDirectory>${output.resources.dir}/
			</outputDirectory>
			<includes>
				<include>${talend.job.path}/**</include>
			</includes>
		</fileSet>
		<fileSet><!-- add test source codes -->
			<directory>${test.sourcecodes.dir}</directory>
			<outputDirectory>${talend.job.name}/src/test/java/</outputDirectory>
			<includes>
				<include>${talend.job.path}/**</include>
			</includes>
		</fileSet>
		<fileSet><!-- add test context resources -->
			<directory>${test.resources.dir}</directory>
			<outputDirectory>${talend.job.name}/src/test/resources/
			</outputDirectory>
			<includes>
				<include>${talend.job.path}/**</include>
			</includes>
		</fileSet>
		<fileSet><!-- junits reports -->
			<directory>${test.reports.dir}</directory>
			<outputDirectory>sunfire-reports</outputDirectory>
			<includes>
				<include>**/*.*</include>
			</includes>
		</fileSet>
		<fileSet><!-- add all resources for running -->
			<directory>${contexts.running.dir}</directory>
			<outputDirectory>${talend.job.name}</outputDirectory>
			<includes>
				<include>**/*.*</include>
			</includes>
		</fileSet>
		<!-- If have children jobs, will add here -->
		<fileSet><!-- microservice config files -->
			<directory>${microservice.configs.dir}</directory>
			<outputDirectory>${file.separator}</outputDirectory>
			<includes>
				<include>config/**</include>
			</includes>
		</fileSet>
		<fileSet><!-- microservice running config files -->
			<directory>${microservice.running.configs.dir}</directory>
			<outputDirectory>${talend.job.name}</outputDirectory>
			<includes>
				<include>config/**</include>
			</includes>
		</fileSet>
		<fileSet><!-- survivorship rules -->
			<directory>${survivorship.rules.dir}</directory>
			<outputDirectory>${talend.job.name}/items/${talend.project.name.lowercase}/metadata/survivorship/</outputDirectory>
			<includes>
			</includes>
		</fileSet>
	</fileSets>
	<dependencySets>
		<dependencySet>
			<outputDirectory>lib</outputDirectory>
			<includes>
				<include>org.talend.libraries:activation</include>
				<include>org.talend.libraries:dom4j-1.6.1</include>
				<include>org.talend.libraries:log4j-1.2.16</include>
				<include>org.talend.libraries:mail-1.4</include>
				<include>org.talend.libraries:slf4j-log4j12-1.7.2</include>
				<include>org.talend.libraries:snowflake-jdbc-3.2.2</include>
				<include>org.talend.libraries:talend-codegen-utils</include>
				<include>org.talend.libraries:talend_file_enhanced_20070724</include>
				<include>org.example.local_project.code:routines</include>
				<include>org.talend.libraries:commons-collections-3.2.2</include>
				<include>org.talend.libraries:log4j-1.2.15</include>
				<include>org.talend.libraries:zip4j_1.3.1</include>
				<include>org.talend.libraries:cassandra-driver-core-3.0.0-shaded</include>
				<include>org.talend.libraries:commons-compress-1.10</include>
				<include>org.talend.libraries:checkArchive-1.1-20171121</include>
				<include>org.talend.libraries:advancedPersistentLookupLib-1.2</include>
				<include>org.talend.libraries:json_simple-1.1</include>
				<include>org.talend.libraries:talend-cassandra-1.2</include>
				<include>org.talend.libraries:slf4j-api-1.7.7</include>
				<include>org.talend.libraries:metrics-core-3.1.2</include>
				<include>org.talend.libraries:thashfile-3.0-20170711</include>
				<include>org.talend.libraries:talendzip</include>
				<include>org.talend.libraries:jboss-serialization</include>
				<include>org.talend.libraries:trove</include>
			</includes>
			<!-- without version for talend libraries -->
			<outputFileNameMapping>${artifact.artifactId}.${artifact.extension}
			</outputFileNameMapping>
			<useProjectArtifact>false</useProjectArtifact>
		</dependencySet>
		<dependencySet>
			<outputDirectory>lib</outputDirectory>
			<includes>
				<include>com.google.auto:auto-common</include>
				<include>com.google.auto.service:auto-service</include>
				<include>org.apache.avro:avro</include>
				<include>commons-codec:commons-codec</include>
				<include>org.apache.commons:commons-compress</include>
				<include>org.apache.commons:commons-lang3</include>
				<include>org.talend.components:components-api</include>
				<include>org.talend.components:components-common</include>
				<include>org.talend.components:components-jdbc-definition</include>
				<include>org.talend.components:components-jdbc-runtime</include>
				<include>org.talend.daikon:daikon</include>
				<include>com.google.guava:guava</include>
				<include>com.fasterxml.jackson.core:jackson-annotations</include>
				<include>com.fasterxml.jackson.core:jackson-core</include>
				<include>org.codehaus.jackson:jackson-core-asl</include>
				<include>com.fasterxml.jackson.core:jackson-databind</include>
				<include>org.codehaus.jackson:jackson-mapper-asl</include>
				<include>net.sourceforge.javacsv:javacsv</include>
				<include>javax.inject:javax.inject</include>
				<include>javax.servlet:javax.servlet-api</include>
				<include>org.slf4j:jcl-over-slf4j</include>
				<include>joda-time:joda-time</include>
				<include>com.cedarsoftware:json-io</include>
				<include>com.thoughtworks.paranamer:paranamer</include>
				<include>org.ops4j.pax.url:pax-url-aether</include>
				<include>org.slf4j:slf4j-api</include>
				<include>org.xerial.snappy:snappy-java</include>
				<include>org.tukaani:xz</include>
			</includes>
			<useProjectArtifact>false</useProjectArtifact>
		</dependencySet>
		<!-- for all jobs -->
		<dependencySet>
			<outputDirectory>${talend.job.name}</outputDirectory>
			<includes>
				<include>org.example.local_project.job:Load_Profiles_Risk_History_Transactional</include>
			</includes>
			<outputFileNameMapping>${artifact.build.finalName}.${artifact.extension}</outputFileNameMapping>
			<useProjectArtifact>true</useProjectArtifact>
		</dependencySet>
	</dependencySets>
</assembly>
